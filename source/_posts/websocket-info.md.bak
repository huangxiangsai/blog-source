---
title: 深入理解Web Socket 
tags: [WebSocket,html5]
date: 2017-05-07
description: ""
---

# WebSocket存在的背景

对于一个新技术的出现，必定是因为现有的技术（方法）不能实现或不能很好的实现某些功能。

那么，WebSocket到底解决了什么问题。

想要知道WebSocket解决了什么问题，先来说说，没有WebSocket的时代存在着什么问题。

在没有WebSocket的时代，比如想要在页面中实现服务端的推送，我们怎么办？

我们知道大部分的页面请求都是通过http的，而http是什么？

是超文本传输协议啊！ 

嗯，我只能说你很棒，但我想说的并不是这个。

事实上，http是个半双工通讯的协议，所以在同一时刻传输数据只能是单向的传输。而且想要获得服务端的数据，必须先发送一个http请求到服务端。

那么问题来了，我们需要实时的做服务端的推送，需要怎么实现。

程序员的智慧的伟大的，通常我们有两种实现方式：轮训、Comet技术

## WebSocket历史

## polling(轮询)

简单的说，就是通过`window.setInterval`方法定时的发送ajax请求（据说更久远的页面想要实时显示最新的内容，是通过设置meta来定时的刷新页面）来获取服务端数据。

对于知道多久服务端会更新数据的话，这确实是个好办法。但很多情况下，并没有这么理想。

我们并不确定每次发出的请求都能获得有效的数据。这样就会造成多余的请求连接，很可能打开和关闭连接很多次，但只获得了很少的有用的数据。 

这明显是种带宽浪费，要知道在不返回任何数据的情况下，一条http请求及响应都会带上至少871 字节的完整head头信息。

## Comet技术

Comet技术，也可以分为两类：`long polling(长轮询)`和`streaming`

### long polling (长轮询)

  ajax 请求
  jsonp

### streaming
  
  iframe, form 

# WebSocket是什么

WebSocket是一个协议，但除此之外，W3C制定了个WebSocket API,通过这个API可以控制协议，并且可以通过服务端的响应去触发事件。(协议是IETF开发的，API是W3C开发的)

目前WebSocket API已经被大多数现代浏览器支持了。

## WebSocket能做啥

简单的说，http请求能做的，它都能做，http不能做的，它也能做。

常用的用途有以下几种:

* 实现服务端的推送，比如：私信,站内通知，各种实时的监控等功能
* 实现聊天室功能
* 用来上传文件，可实现断点续传



# WebSocket的兼容性


# 对于不支持WebSocket的浏览器如何使用WebSocket

* 使用插件
* 使用垫片
[Modernizr-websocket]( https://github.com/Modernizr/Modernizr/ wiki/HTML5-Cross-Browser-Polyfills.
)
* 降级处理,如socket.io，在不支持WebSocket的情况下，使用ajax轮训或Commet技术,通过socket.io的好处，可使用同一套WebSocket API，来使用WebSocket或Commet技术

## blob 与 arrayBuffer

## WebSocket 代理

## WebSocket 与 HTML5

说到WebSocket，我们就会想到HTML5，那么这两种有什么关系呢，



## socket.io